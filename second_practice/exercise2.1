#
# WepSIM (https://wepsim.github.io/wepsim/)
#


##
## Microcode Section
##

begin
{
    fetch:          (T2, C0),
                    (TA, R, BW=11, M1=1, C1=1),
                    (M2, C2, T1, C3),
                    (A0, B=0, C=0)
}

lui RRE1, U32 {
            co= 010010,
            nwords=2,
            RRE1=reg(25,21),
						U32=inm(63,32),
  					help='r1 = r2 & r3',
            {
                (T2, C0),
                (M2, C2, TA, R, BW=11, M1, C1)
                (T1, LC, SELC=10101, A0=1, B=1, C=0)
            }
  
}

add RRE1, RRE2, RRE3 {
  					# CO (31-26): 011000
            co=011000,
            nwords=1,
            RRE1=reg(25,21),
            RRE2=reg(20,16),
            RRE3=reg(15,11),
            help='r1 = r2 + r3',
            {
              	# BR[RRE1] ← BR[RRE2] + BR[RRE3]
                (MC,MR=0, SELA=10000, SELB=1011, SELCOP = 1010, T6, LC, SELC=10101, SELP = 11, M7, C7, A0=1, B=1, C=0), # RB = RRE3, # RA = RRE2, # RC = RRE1
            }
  
}

mul_add RRE1, RRE2, RRE3, RRE4 {
            co=011001,
            nwords=1,
            RRE1=reg(25,21),
            RRE2=reg(20,16),
            RRE3=reg(15,11),
  					RRE4=reg(10,6),
            help='r1 = (r2 * r3) + r4',
            {
              	# RT1 <- BR[RRE2] * BR[RRE3]
              	# BR[RRE1] ← RT1 + BR[RRE4]	
                (MC,MR=0, SELA=10000, SELB=1011, SELCOP = 1100,MA=0,MB=0, T6 = 1, C4 = 1),
								(MC,MA, MR=0, SELB=110, MB=0, SELCOP = 1010, T6, LC, SELC=10101 ,SELP= 11, M7, C7, A0=1, B=1, C=0)
            }
}


jal U16{
  					# CO (31-26): 100001
            co=  100001,
            nwords=1,
						U16=inm(15,0),
  					help='',
            {
              # BR[ra] ← PC
              # PC ← U16
              
                (T2, LC,MR = 1, SELC = 1),
								(SE=0, OFFSET=0, SIZE=10000, T3, C2,A0=1, B=1, C=0)
            }
  
}
jr_ra{
  					# CO (31-26): 100010
            co=100010,
            nwords=1,
  					help='jr ra',
            {
              # PC ← ra
                (MR=1, SELA=1, T9, C2, A0=1, B=1, C=0)
            }
  
}


sw RRE1 (RRE2) {
  					# CO (31-26): 010000
            co= 010000,
            nwords=1,
            RRE1=reg(25,21)
            RRE2=reg(20,16)
  					help = 'a[i] = b'
            {
              # MBR ← RRE1
              # MAR ← RRE2
              # M[MAR] ← MBR
                (T9, C1, MR= 0, SELA=10101), # RA = RRE1,
                (T9, C0, MR= 0, SELA=10000), # RA = RRE2, 
								(TA, W, BW = 11, TD, A0=1, B=1, C=0)
            }
  
}

             
lw RRE1, (RRE2) {
  					# CO (31-26): 010011
            co= 010011,
            nwords=1,
            RRE1=reg(25,21)
            RRE2=reg(20,16)
  					help = 'a = b[i]'
            {
              # MAR ← RRE2	
              # MBR ← M[MAR]
              # RRE1 ← MBR
                (T9, C0,  MR= 0, SELA=10000), # RA = RRE2
                (TA, R, BW=11, M1, C1),
								(T1, LC, MR=0, SELC=10101,  A0=1, B=1, C=0) #  RC = RRE1
            }
  
}
             

sb RRE1 (RRE2) {
  					# CO (31-26): 010000
            co= 010001,
            nwords=1,
            RRE1=reg(25,21)
            RRE2=reg(20,16)
  					help = 'a[i] = b'
            {
              # MBR ← RRE1
              # MAR ← RRE2
              # M[MAR] ← MBR
                (T9, C1, MR= 0, SELA=10101), # RA = RRE1,
                (T9, C0, MR= 0, SELA=10000), # RA = RRE2, 
								(TA, W, BW = 0, TD, A0=1, B=1, C=0)
            }
  
}

             
lb RRE1, (RRE2) {
  					# CO (31-26): 010011
            co= 010100,
            nwords=1,
            RRE1=reg(25,21)
            RRE2=reg(20,16)
  					help = 'a = b[i]'
            {
              # MAR ← RRE2	
              # MBR ← M[MAR]
              # RRE1 ← MBR
                (T9, C0,  MR= 0, SELA=10000), # RA = RRE2
                (TA, R, BW=0, M1, C1),
								(T1, LC, MR=0, SELC=10101,  A0=1, B=1, C=0) #  RC = RRE1
            }
  
}             
             
halt{
  					# CO (31-26): 100011
            co=100011,
            nwords=1,
  					help='stop',
            {
                (MR=1, SELA=0, T9, C2, C7, A0=1, B=1, C=0)
            }
  
}          
             
             
xchb (RRE1), (RRE2) {
  					# CO (31-26): 100011
            co=011010,
            nwords=1,
  					RRE1 = reg(25,21)
						RRE2 = reg(20,16)
  					help='a[i],b[j] = b[j],a[i]',
            {
               # MAR <- RRE1														; RA = RRE1,T9, C0
               # MBR <- MM[MAR]													; Ta, BW = 11,R,M1,C1
               # RT1 <- MBR															; T1, C4
               # MAR <- RRE2														; RA = RRE2,T9, C0
               # MBR <- MM[MAR]													; Ta, BW = 11,R,M1,C1
               # MAR <- RRE1														; RA = RRE1, T9, C0
               # MM[MAR] <- MBR													; Ta, W, BW = 11, Td 
               # MBR <- RT1 														; T4, M1 = 0, C1
               # MAR <- RRE2														; RA = RRE2, T9, C0
               # MM[MAR] <- MBR													; Ta, W, BW = 11, Td 
              
              	(MR = 0, SELA = 10101, T9,C0)
              	(Ta, BW = 0, R, M1, C1)
              	(T1, C4)
              	(MR = 0, SELA = 10000, T9, C0)
              	(Ta, BW = 0, R, M1, C1)
              	(MR = 0, SELA = 10101, T9,C0)
              	(TA, W, BW = 0, TD)
                (T4, M1 = 0,C1)
                (MR = 0, SELA = 10000, T9, C0)
                (TA, W, BW = 0, TD, A0=1, B=1, C=0)
            }
  
}      
             
             


beq RRE1 RRE2 S10{
            co=110100,
            nwords=1,
            RRE1=reg(25,21),
            RRE2=reg(20,16),
            S10=address(9,0)rel,
            help='if (RRE1 == RRE2) pc += offset',
            {
              # RRE1 - RRE2 * 0 -> end
              # end:
								# RT2 ← PC	
              	# RT1 ← IR(S10)
                # PC ← RT1 + RT2
                (MR=0, SELA=10101, SELB=10000, MC, SELCOP=1011, SELP=11, M7, C7), # RA = RRE1, RB = RRE2
                (A0 = 0, B=0, C=110, MADDR=end),
              	(A0=1, B=1, C=0),
  		end: 			
  							(T2, C5),
                (SE = 1, SIZE=1010, OFFSET = 0, T3, C4),
                (MA, MB = 01,MC, SELCOP = 1010, T6, C2, A0=1, B=1, C=0)
						}
}


# In/Out

in reg val {
	    co=111111,
	    nwords=1,
	    reg=reg(25,21),
	    val=inm(15,0),
	    help='reg = device_registers[val]',
	    {
		(SE=0, OFFSET=0, SIZE=10000, T3=1, C0=1),
		(TA=1, IOR=1, BW=11, M1=1, C1=1),
		(T1=1, LC=1,  MR=0, SELC=10101, A0=1, B=1, C=0)
	    }
}

out reg val {
	    co=111111,
	    nwords=1,
	    reg=reg(25,21),
	    val=inm(15,0),
	    help='device_register[val] = reg',
	    {
		(SE=0, OFFSET=0,   SIZE=10000,   T3=1, C0=1),
		(MR=0, SELA=10101, T9=1,	 M1=0, C1=1),
		(TA=1, TD=1,       IOW=1, BW=11, A0=1, B=1, C=0)
	    }
}
             
             
             
             
registers
{
	0=(zero,  x0),
	1=(ra,    x1),
	2=(sp,    x2) (stack_pointer),
	3=(gp,    x3),
	4=(tp,    x4),
	5=(t0,    x5),
	6=(t1,    x6),
	7=(t2,    x7),
	8=(s0,    x8),
	9=(s1,    x9),
	10=(a0,  x10),
	11=(a1,  x11),
	12=(a2,  x12),
	13=(a3,  x13),
	14=(a4,  x14),
	15=(a5,  x15),
	16=(a6,  x16),
	17=(a7,  x17),
	18=(s2,  x18),
	19=(s3,  x19),
	20=(s4,  x20),
	21=(s5,  x21),
	22=(s6,  x22),
	23=(s7,  x23),
	24=(s8,  x24),
	25=(s9,  x25),
	26=(s10, x26),
	27=(s11, x27),
	28=(t3,  x28),
	29=(t4,  x29),
	30=(t5,  x30),
	31=(t6,  x31)
}

