.data
    msg:   .byte 3,3,3,3,2,2,2,2, 2,2,2,2, 1,2,1,1,2,1,1,1, 1,1,2,4,1,1,1,1,
                 0,1,0,1,0,1,1,1, 0,1,1,1,0,1,1,1, 0,1,0,1,0,0,0,0,
                 0,1,0,1,0,1,0,1, 0,1,0,1,0,1,0,1, 0,1,0,1,0,0,0,0,
                 0,1,1,1,0,1,1,1, 0,1,1,1,0,1,1,1, 0,1,1,1,0,0,0,0,
                 0,1,0,1,0,1,0,1, 0,1,0,0,0,1,0,0, 0,0,0,1,0,0,0,0,
                 0,1,0,1,0,1,0,1, 0,1,0,0,0,1,0,0, 0,1,1,1,0,0,0,0,
                 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
                 0,1,0,1,0,1,1,1, 0,1,1,1,0,1,1,1, 0,0,0,0,0,0,0,0,
                 0,1,0,1,0,1,0,0, 0,1,0,1,0,1,0,1, 0,0,0,0,0,0,0,0,
                 0,1,1,1,0,1,1,1, 0,1,1,1,0,1,0,1, 0,0,0,0,0,0,0,0,
                 0,0,0,1,0,1,0,0, 0,1,0,1,0,1,1,0, 0,0,0,0,0,0,0,0,
                 0,1,1,1,0,1,1,1, 0,1,0,1,0,1,0,1, 0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
                 0,1,1,1,0,1,1,1, 0,1,1,1,0,1,1,1, 0,0,1,0,0,0,0,0,
                 0,0,0,1,0,1,0,1, 0,0,0,1,0,0,0,1, 0,0,1,0,0,0,0,0,
                 0,1,1,1,0,1,0,1, 0,1,1,1,0,1,1,1, 0,0,1,0,0,0,0,0,
                 0,1,0,0,0,1,0,1, 0,1,0,0,0,1,0,0, 0,0,0,0,0,0,0,0,
                 0,1,1,1,0,1,1,1, 0,1,1,1,0,1,1,1, 0,0,1,0,0,0,0,0,
                 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,
                 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0

                 

.text

   main:   
           # send address of msg to 0x3108 (data I/O register)
           lui t5 msg # lui load in t5 the msg address
           out t5 0x3108 # out send t5 value to 0x3108 I/O address
           # send show command to 0x3104 (control I/O register)
           lui t5 0x20 # 0x20 means “show image” command
           out t5 0x3104 # out send t5 value to 0x3104 I/O address
           lui a0 msg
           jal demo
           # the end
 						halt
	demo:
				add t0 a0 x0 # alt_adress
        add t6 a0 x0 # start of the address 
        # These lines of codes are for getting to the bottom of the matrix
       	lui t1 0 # t1 = i
        lui t2 0 # t2 = j
        lui t3 1 # to add to the counters
        lui t4 24 # size of the matrix
	 loopi: beq t1 t4 end
   			loopj: beq t2 t4 next_line
        	xchb (t0) (t6)
        	add t2 t2 t3
          add t6 t6 t3
          add t0 t0 t4
          beq x0 x0 loopj
   			next_line:
   				add t1 t1 t3 # i += 1
					add t2 t1 t3 # j = i + 1 (to skip diagonal)
          add t6 t6 t2 # address += j 
          mul_add t5 t2 t4 t1 # t5 = j*24 + i
          add t0 a0 t5 # alt_address = initial address + t5
   
        
        
        lui t5 msg 
        out t5 0x3108 # out send t5 value to 0x3108 I/O address
        #send show command to 0x3104 (control I/O register)
        lui t5 0x20 # 0x20 means “show image” command
        out t5 0x3104 # out send t5 value to 0x3104 I/O address
        
        #lui t5 msg # lui load in t5 the msg address
        #out t5 0x3108 # out send t5 value to 0x3108 I/O address
        # send show command to 0x3104 (control I/O register)
        #lui t5 0x20 # 0x20 means “show image” command
        #out t5 0x3104 # out send t5 value to 0x3104 I/O address
       beq x0 x0 loopi
  end:
  		lui t5 msg2 # lui load in t5 the msg address
           out t5 0x3108 # out send t5 value to 0x3108 I/O address
           # send show command to 0x3104 (control I/O register)
           lui t5 0x20 # 0x20 means “show image” command
           out t5 0x3104 # out send t5 value to 0x3104 I/O address
  		lui a0 1
      jr_ra








